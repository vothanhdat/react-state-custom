:root {
    color-scheme: light dark;
    --jv-color: light-dark(#333b3c, #efefec);
    --jv-bg-color: light-dark(#f9f9f9, #212121);
    --jv-change-color: rgb(255, 50, 0);
}

.react-state-dev-btn {
    position: fixed;
    bottom: 30px;
    right: 30px;
    transition: opacity 0.3s;

    &[data-active="true"] {
        opacity: 0;
        pointer-events: none;
    }
}


.react-state-dev-container {

    align-items: stretch;
    font-size: 12px;
    color: var(--jv-color);
    background-color: var(--jv-bg-color);
    border-top: solid var(--jv-color) 1px;
    position: fixed;
    bottom: 0px;
    right: 0px;
    left: 0px;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s, transform 0.3s;
    transform: translateY(100%);
    padding: 0.5em;

    &[data-active="true"] {
        opacity: 1;
        pointer-events: all;
        transform: translateY(0%);
    }

    .close-btn {
        position: absolute;
        top: 0px;
        right: 0px;
    }

    .main-panel {
        display: flex;
        flex-direction: row;
        gap: 1em;
        padding: 1em;
        resize: vertical;
        height: 350px;
        min-height: 200px;
        max-height: 60vh;
        overflow: hidden;
        justify-items: stretch;

        .state-list {
            max-width: 50%;
            min-width: 100px;
            width: 200px;
            overflow: auto;
            align-self: stretch;
            resize: horizontal;

            .state-filter {
                padding: 0.2em 0.5em;
                width: stretch;
                position: sticky;
                top: 0px;
            }

            .state-key {
                cursor: pointer;
                padding: 0.2em 0.5em;
                font-family: monospace;
                background-color: #0000;

                &:hover {
                    background-color: light-dark(#0001, #fff1);
                }

                &[data-active="true"] {
                    background-color: light-dark(#0003, #fff3);
                }

                transition: border-color 1s;
                border-color: #0000;
                border-bottom-color: #8884;

                border-width: 2px;
                border-style: solid;

                &.state-key-updated {
                    transition: border-color 0.00s;
                    border-color: var(--jv-change-color);
                    background-color: color-mix(in srgb, var(--jv-change-color) 20%, transparent);
                }

                .state-key-name {
                    overflow: hidden;
                    text-overflow: ellipsis;
                    white-space: nowrap;
                }

                &[data-active="true"] .state-key-name {
                    white-space: wrap;
                }

                .state-key-meta {
                    font-size: 10px;
                    opacity: 0.6;
                }
            }

        }

        .state-view {
            flex: 1;
            overflow: auto;
            border-inline-start: solid 3px #8888;
            padding-inline-start: 1em;
        }
    }

    mark {
        background: orange;
    }
}

.jv-root {

    font-family: monospace;
    user-select: none;
    background-color: var(--jv-bg-color);

    .jv-name {
        opacity: 0.8;
    }

    .jv-type {
        opacity: 0.5;
        font-size: smaller;
        padding-inline: 0.4em;
    }

    .jv-value {
        word-wrap: break-word;
    }

    .jv-cursor {
        cursor: pointer;
    }

    .jv-field {
        margin-block: 1px;
    }

    .jv-field .jv-field {

        >:first-child>:first-child>.jv-name,
        >.jv-name {
            transition: background-color 1s;
            background-color: #0000;
        }

        &.jv-updated>:first-child>:first-child>.jv-name,
        &.jv-updated>.jv-name {
            transition: background-color 0.00s;
            background-color: var(--jv-change-color);
        }
    }

    .jv-field-obj>.jv-value {
        padding-inline-start: 1.5em;
        margin-inline-start: 0.2em;
        border-inline-start: solid 1px #8888;
        transition: border-color 1s;
    }

    .jv-field .jv-field-obj.jv-updated>.jv-value {
        border-color: var(--jv-change-color);
        transition: border-color 0.00s;
    }

    .jv-field-obj>:first-child>:first-child>.jv-name {
        cursor: pointer;
    }


    .jv-field-obj {
        --lv: 0;
    }

    .jv-field-obj .jv-field-obj {
        --lv: 1;
    }

    .jv-field-obj .jv-field-obj .jv-field-obj {
        --lv: 2;
    }

    .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj {
        --lv: 3;
    }

    .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj {
        --lv: 4;
    }

    .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj {
        --lv: 5;
    }

    .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj {
        --lv: 6;
    }

    .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj .jv-field-obj {
        --lv: 7;
    }

    .jv-field-obj>:first-child {
        container-type: scroll-state;
        position: sticky;
        top: calc(var(--lv, 0) * 1.5em);
        line-height: 1.5;
        z-index: calc(10 - var(--lv, 0));

        @container scroll-state(stuck: top) {
            >div {
                background-color: var(--jv-bg-color);
                border-bottom: solid 1px #8884;
                font-weight: bold;
            }

        }
    }




    .jv-field-string> :is(.jv-type, .jv-value) {
        color: orange;
    }

    .jv-field-number> :is(.jv-type, .jv-value) {
        color: red;
    }

    .jv-field-boolean> :is(.jv-type, .jv-value) {
        color: #08f;
    }

    .jv-field-function> :is(.jv-type, .jv-value) {
        color: #08f;
    }

    .jv-preview {
        opacity: 0.5;
    }
}